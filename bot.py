from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.utils.executor import start_webhook, set_webhook, start_polling
import keyboard as kb
import weather as cc
from config import TOKEN # WEBHOOK_PATH, WEBHOOK_HOST, WEBHOOK_URL, WEBAPP_HOST, WEBAPP_PORT

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

def main():
    @dp.message_handler(commands=['start'])
    async def start_command(message: types.Message):
        await message.answer('–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ —á—Ç–æ —Ç–æ!\n–ü–æ–∫–∞–∂—É –ø–æ–≥–æ–¥—É!', reply_markup=kb.cities_kb)

    @dp.message_handler(commands=['help'])
    async def help_command(message: types.Message):
        await message.answer('–ü–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ 4 –≥–æ—Ä–æ–¥–∞—Ö –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞!\n–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞: ', reply_markup=kb.cities_kb)

    @dp.message_handler(commands=['check'])
    async def check_command(message: types.Message):
        await message.answer_photo('https://www.harlingenveterinaryclinic.com/sites/default/files/styles/large/public/golden-retriever-dog-breed-info.jpg?itok=cdghqKxv')

    @dp.message_handler(Text(equals='–ñ–µ–∑–∫–∞–∑–≥–∞–Ω!üè∞'))
    async def zhez_weather(message: types.Message):
        now, feels = cc.temperature(cc.zhez_id)
        await message.answer(f'–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å: {now}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels}¬∞C')

    @dp.message_handler(Text(equals='–®—ã–º–∫–µ–Ω—Ç!üèú'))
    async def shym_weather(message: types.Message):
        now, feels = cc.temperature(cc.shym_id)
        await message.answer(f'–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å: {now}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels}¬∞C')

    @dp.message_handler(Text(equals='–ê–ª–º–∞—Ç—ã!‚õ∞'))
    async def ala_weather(message: types.Message):
        now, feels = cc.temperature(cc.almaty_id)
        await message.answer(f'–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å: {now}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels}¬∞C')

    @dp.message_handler(Text(equals='–ê—Å—Ç–∞–Ω–∞!üèô'))
    async def ast_weather(message: types.Message):
        now, feels = cc.temperature(cc.ast_id)
        await message.answer(f'–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å: {now}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels}¬∞C')

    @dp.message_handler(content_types= types.ContentType.ANY)
    async def simple_message(message: types.Message):
        await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é.ü§î\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ /help\n–ò–ª–∏ –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏!‚úåÔ∏è', reply_markup=kb.cities_kb)

    start_polling(dp)

if __name__ == '__main__':
    main()